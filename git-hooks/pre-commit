#!/bin/bash
set -euo pipefail
# Shihan Pre-Commit Hook - Enforces the Creed of the Code Ninja
#
# This script runs the creed audit on staged files before committing.
#
# Installation:
#   1. Make sure shihan-mcp is installed
#   2. Copy this file to .git/hooks/pre-commit
#   3. Make it executable: chmod +x .git/hooks/pre-commit

# Check if shihan-mcp is installed
if ! command -v shihan-mcp &> /dev/null; then
    echo "Error: shihan-mcp is not installed. Please install it with 'pip install -e .'."
    exit 1
fi

echo "üîç Shihan is auditing staged files..."

# Get list of staged Python files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.py$' || true)

if [ -z "$STAGED_FILES" ]; then
    echo "No Python files staged for commit. Skipping audit."
    exit 0
fi

# Convert newline-separated list to space-separated list
STAGED_FILES_ARRAY=($STAGED_FILES)

# Call the audit_creed tool via MCP
python -c "
import asyncio
import json
from mcp.client.stdio import stdio_client
from mcp import ClientSession, StdioServerParameters
import sys

async def audit_files():
    params = StdioServerParameters(
        command='shihan-mcp',
        args=[],
    )
    
    staged_files = sys.argv[1:]
    
    async with stdio_client(params) as (r, w):
        async with ClientSession(r, w) as s:
            await s.initialize()
            resp = await s.call_tool(
                name='audit_creed',
                arguments={'args': {'files': staged_files}},
            )
            result = json.loads(resp.content[0].text)
            
            violations = result.get('violations', [])
            
            if violations:
                print('\\n‚õî Creed Violations Found:\\n')
                for violation in violations:
                    print(f'  {violation}')
                print('\\n‚ùå Commit aborted. Please fix the violations and try again.')
                sys.exit(1)
            else:
                print('\\n‚úÖ No creed violations found. Proceeding with commit.')
                sys.exit(0)

asyncio.run(audit_files())
" "${STAGED_FILES_ARRAY[@]}"

# The Python script will exit with the appropriate code